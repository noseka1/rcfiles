# Configuration based on:
# https://gist.github.com/tsl0922/d79fc1f8097dde660b34
# https://gist.github.com/spicycode/1229612
# https://github.com/rothgar/awesome-tmux
# https://github.com/tmux-plugins/tmux-sensible
# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Increase scrollback buffer size (default is 2000)
set -g history-limit 50000

# Tmux messages are displayed for 1 second
set -g display-time 1000

# Refresh 'status-left' and 'status-right' more often
set -g status-interval 10

# Upgrade $TERM
set -g default-terminal "screen-256color"

# Allow zsh-titles plugin to update tmux window title
set -g allow-rename off

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# Vi keys, even for vim users
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Enable mouse mode
#set -g mouse on

# Start at 1 rather than 0
set -g base-index 1
set -g pane-base-index 1

# When a window is closed, automatically renumber the other windows in numerical order
set-option -g renumber-windows on

# Use the current dir for new panes and windows
unbind-key '"'
unbind-key '%'
unbind-key 'c'

bind-key '"' split-window -c "#{pane_current_path}"
bind-key '%' split-window -h -c "#{pane_current_path}"
# -a creates the new window next to the current window
bind-key 'c' new-window -c "#{pane_current_path}" -a

# Split panes using | and -
bind-key | split-window -h
bind-key - split-window -v
unbind-key '"'
unbind-key %

# Vi shortcuts for selecting panes
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# Shortcuts for resizing panes
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Switch windows using Alt-h, Alt-l without prefix
bind-key -n M-h previous-window
bind-key -n M-l next-window

# Move windows using Alt-h, Alt-l with prefix
bind-key -r M-h swap-window -t -1\; select-window -t -1
bind-key -r M-l swap-window -t +1\; select-window -t +1

# Changing Ctrl-b to Ctrl-j as the command button
unbind-key C-b
set -g prefix C-j

# Easy config reload
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Toggle status bar
bind-key b set-option status

# Clear the scrollback buffer
bind C-l clear-history

# Vi is good
setw -g mode-keys vi

# Go straight to the copy mode
bind-key -n M-j copy-mode

# By default, tmux-yank will exit copy mode after yanking text. Remain in copy mode
set -g @yank_action 'copy-pipe'

# Normal copy and block copy
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle

# Incremental search in copy-mode-vi
# See also https://www.reddit.com/r/tmux/comments/arv927/incremental_search_in_copymodevi/
bind-key -T copy-mode-vi / command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off
set -g activity-action other

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Status bar
set -g status-justify centre
set-option -g status-style bg=black,fg=yellow
set-option -g mode-style bg=brightyellow,fg=black
set -g status-left '#{?client_prefix,#[bg=red],#[bg=cyan]}#[fg=black]  #S  #[bg=black] #(gitmux "#{pane_current_path}")'
set -g status-left-length 100
#set -g status-right "#{net_speed}|#{sysstat_cpu}|#{sysstat_mem}|#{sysstat_swap}|#{sysstat_loadavg}|#[fg=cyan]#(echo $USER)#[default]@#H"
set -g status-right ""
set -g status-right-length 100

set-window-option -g window-status-current-format '#{?pane_in_mode,#[bg=brightyellow]#[fg=black],#[bg=cyan]#[fg=black]}#I #W#F'
set-window-option -g window-status-format '#{?window_activity_flag,#[fg=white],#[fg=cyan]}#I #W'
set-window-option -g window-status-activity-style fg=white

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'laktak/extrakto'

set -g @net_speed_format "D:%5s U:%5s"

# Start extracto using prefix + e instead of the default prefix + tab
set -g @extrakto_key e
set -g @extrakto_grab_area "recent"
set -g @extrakto_split_direction "v"
set -g @extrakto_split_size "10"

run -b '~/.tmux/plugins/tpm/tpm'

# In copy mode, use M-j and M-k to navigate to the previous and next shell prompt
# See also:
# https://issuehint.com/issue/tmux/tmux/3102
# https://www.youtube.com/watch?v=uglorjY0Ntg

set -g @shell-prompt-regexp "^\[[[:alnum:]]+@[[:alnum:]]+ .+\]\\$ "

bind -T copy-mode-vi -r M-k {
  send-keys -X start-of-line
  send-keys -XF search-backward "#{@shell-prompt-regexp}"
  # I have to use a subshell here because the width format specifier cannot
  # properly handle unicode prompt characters like λ or non-blocking spaces.
  if -F '#{!=:#{n:search_match},0}' {
    run-shell "sh -c 'tmux send-keys -F -N \${#1} -X cursor-right' -- #{q:search_match} >/dev/null 2>&1"
  }
}

bind -T copy-mode-vi -r M-j {
  send-keys -X end-of-line
  send-keys -XF search-forward "#{@shell-prompt-regexp}"
  if -F '#{!=:#{n:search_match},0}' {
    run-shell "sh -c 'tmux send-keys -F -N \${#1} -X cursor-right' -- #{q:search_match} >/dev/null 2>&1"
  }
}

# Unbind the Alt-x combination for jump-to-mark. It conflicts with Win+Alt+x for starting recording in OBS.
unbind-key -T copy-mode-vi M-x
