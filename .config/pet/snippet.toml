[[snippets]]
  description = "Download the TLS certificate from the remote server"
  command = "openssl s_client -showcerts -servername <server_fqdn> -connect <server_fqdn>:443 </dev/null"
  output = ""

[[snippets]]
  description = "Sort installed RPMs by size"
  command = "rpm -qa --queryformat '%{size} %{name}\\n' | sort -rn"
  output = ""

[[snippets]]
  description = "List Kubernetes events sorted by time"
  command = "oc get events --sort-by metadata.creationTimestamp"
  output = ""

[[snippets]]
  description = "Fix file names"
  command = "find . -maxdepth 1 -type f | while read F; do F2=$(echo $F | tr -d ',' | tr -d \"'\" | tr ' ' '.'); echo $F2; mv \"$F\" \"$F2\"; done"
  output = ""

[[snippets]]
  description = "Remove terminal color sequences from the log file, https://superuser.com/a/380778"
  command = "sed 's/\\x1b\\[[0-9;]*m//g'"
  output = ""

[[snippets]]
  description = "Removes all \"leaf\" packages from the system that were originally installed as dependencies of user-installed packages, but which are no longer required by any such package"
  command = "dnf autoremove"
  output = ""

[[snippets]]
  description = "Watch Kubernetes events in all namespaces"
  command = "oc get events --all-namespaces --sort-by metadata.creationTimestamp --watch"
  output = ""

[[snippets]]
  description = "Register the system to the Red Hat Customer Portal and attach subscriptions"
  command = "subscription-manager register && subscription-manager attach --pool 8a85f98460bfb0470160c2ff22f13e47"
  output = ""

[[snippets]]
  description = "Red Hat VPN"
  command = "sudo openvpn --config /etc/openvpn/client/ovpn-rdu2-tcp.conf"
  output = ""

[[snippets]]
  description = "Flush firewall rules"
  command = "sudo nft flush ruleset"
  output = ""

[[snippets]]
  description = "List ALL Kubernetes resources in the current namespace"
  command = "kubectl api-resources --verbs=list --namespaced -o name | grep -v events.events.k8s.io | grep -v events | grep -v packagemanifests.packages.operators.coreos.com | xargs -n 1 kubectl get --show-kind --ignore-not-found"
  output = ""

[[snippets]]
  description = "Log in to the OpenShift integrated registry"
  command = "podman login -u xyz -p $(oc whoami -t) default-route-openshift-image-registry.apps.mycluster.example.com"
  output = ""

[[snippets]]
  description = "Convert YouTube video to mp3"
  command = "youtube-dl --extract-audio --audio-format mp3 <youtube_url>"
  output = ""

[[snippets]]
  description = "Update Debian packages"
  command = "sudo apt update && sudo apt full-upgrade"
  output = ""

[[snippets]]
  description = "Dump Kubernetes secrets in the current namespace to stdout"
  command = "oc get secret --output name | while read SECRET; do echo \"SECRET $SECRET\"; oc extract $SECRET --to -; done 2>&1"
  output = ""

[[snippets]]
  description = "Dump Kubernetes configmaps in the current namespace to stdout"
  command = "oc get configmap --output name | while read CM; do echo \"CONFIGMAP $CM\"; oc extract $CM --to -; done 2>&1"
  output = ""

[[snippets]]
  description = "Break the CA bundle into individual cert files"
  command = "awk 'BEGIN {c=0;} /BEGIN CERT/{c++} { print > \"cert.\" c \".pem\"}' < '<chain.pem>'"
  output = ""

[[snippets]]
  description = "Decode JWT token"
  command = "echo <jwt_token> | jq -R 'gsub(\"-\";\"+\") | gsub(\"_\";\"/\") | split(\".\") | .[1] | @base64d | fromjson'"
  output = ""

[[snippets]]
  description = "Display X.509 certificate info"
  command = "openssl x509 -text -in <cert.pem>"
  output = ""

[[snippets]]
  description = "Login to quay.io using OCP pull secret"
  command = "cat $HOME/.mysecrets/ocp-pull-secret.json | jq --raw-output '.auths.\"quay.io\".auth' | base64 --decode | ( IFS=: read USERNAME PASSWORD; podman login quay.io --username $USERNAME --password $PASSWORD)"
  output = ""

[[snippets]]
  description = "Clean up stopped containers and unused container images"
  command = "podman container prune --force && podman image prune --force"
  output = ""

[[snippets]]
  description = "Extract AWS cloud provider secrets from OCP"
  command = "oc extract -n openshift-machine-api secret/aws-cloud-credentials --to -"
  output = ""

[[snippets]]
  description = "Decode Helm secret"
  command = "oc extract -n <namespace> secret/<name> --to - 2>/dev/null  | base64 -d | gunzip | jq"
  output = ""
